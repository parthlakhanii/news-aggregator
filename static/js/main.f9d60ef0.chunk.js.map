{"version":3,"sources":["serviceWorker.js","components/login.js","views/card.js","views/sideBar.js","components/dashboard.js","components/registration.js","app.route.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Login","classes","React","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlinedIcon","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Button","href","Grid","container","item","xs","Link","root","maxHeight","minHeight","root2","media","height","Cards","data","open","setOpen","useState","useTheme","fullScreen","useMediaQuery","breakpoints","down","Fragment","Card","CardActionArea","url","target","CardMedia","image","title","CardContent","gutterBottom","Moment","fromNow","publishedDate","Dialog","onClose","handleClose","aria-labelledby","icon","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","concat","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","up","toolbar","_objectSpread","justifyContent","padding","mixins","content","flexGrow","SideBar","props","setCategory","category","changeCategoryEvent","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","handleDrawerOpen","edge","MenuIcon","noWrap","Drawer","handleDrawerClose","direction","ChevronRightIcon","ChevronLeftIcon","List","ListItem","button","key","ListItemIcon","ListItemText","primary","aria-hidden","paragraph","Dashboard","Component","constructor","super","changeCategory","getNewsUrl","process","fetch","then","res","json","length","currentDate","Date","Math","floor","this","addNewsData","setState","newsData","addNewsUrl","body","country","options","method","headers","Accept","JSON","stringify","response","Error","removeDuplicates","titles","includes","push","state","componentDidMount","console","log","render","bind","map","index","imageUrl","toLocaleDateString","weekday","year","month","day","description","Copyright","align","getFullYear","SignUp","sm","justify","Box","mt","Routes","Switch","Route","exact","path","Redirect","to","Registration","ReactDOM","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f9d60ef0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n        </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        href='/dashboard'\n                    >\n                        Sign In\n                </Button>\n                {/* <Router>\n                    <NavLink to=\"/dashboard\" component={<Routes />}> Link </NavLink>\n                </Router> */}\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n              </Link>\n                        </Grid>\n                        <Grid item>\n                            <Link href=\"/registration\" variant=\"body2\">\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            {/* <Box mt={8}>\n        <Copyright />\n      </Box> */}\n        </Container>\n    );\n}","import React from \"react\";\nimport \"./view.css\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Dialog from '@material-ui/core/Dialog';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport Moment from 'react-moment';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: 345,\n        margin: '7px',\n        maxHeight: 316.88,\n        minHeight: 316.88,\n        backgroundColor: '#404040',\n        color: 'white'\n    },\n    root2: {\n        maxWidth: 650,\n        margin: '7px',\n        maxHeight: 650\n    },\n    media: {\n        height: 200,\n    },\n    color: {\n        color: 'white !important'\n    },\n});\n\nexport default function Cards(data) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    // const handleClickOpen = () => {\n    //     setOpen(true);\n    // };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    return (\n        <>\n            <Card className={classes.root}>\n                <CardActionArea href={data.url} target=\"_blank\">\n                    <CardMedia\n                        className={classes.media}\n                        image={data.image}\n                        title={data.title}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"body2\" component=\"p\">\n                            {data.title}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {/* {data.publishedDate} */}\n                            <Moment fromNow>{data.publishedDate}</Moment>\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                {/* <CardActions>\n                <Button size=\"small\" color=\"primary\">\n                    Share\n          </Button>\n                <Button size=\"small\" color=\"primary\">\n                    Learn More\n          </Button>\n            </CardActions> */}\n            </Card>\n            <Dialog\n                fullScreen={fullScreen}\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"responsive-dialog-title\"\n            >\n                <Card className={classes.root2}>\n                    <CardActionArea>\n                        <CardMedia\n                            className={classes.media}\n                            image={data.image}\n                            title={data.title}\n                        />\n                        <CardContent>\n                            <Typography gutterBottom variant=\"body2\" component=\"p\">\n                                {data.title}\n                            </Typography>\n                            <Typography className={classes.color} variant=\"body2\" component=\"p\">\n                                {data.publishedDate}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n\n                {/* <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Let Google help apps determine location. This means sending anonymous location data to\n                        Google, even when no apps are running.\n          </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        Disagree\n          </Button>\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\n                        Agree\n          </Button>\n                </DialogActions> */}\n            </Dialog>\n        </>\n    );\n}\n\n// export function ResponsiveDialog() {\n//     const [open, setOpen] = React.useState(false);\n//     const theme = useTheme();\n//     const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n//     const handleClickOpen = () => {\n//       setOpen(true);\n//     };\n\n//     const handleClose = () => {\n//       setOpen(false);\n//     };\n\n//     return (\n//       <div>\n//         <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//           Open responsive dialog\n//         </Button>\n//         <Dialog\n//           fullScreen={fullScreen}\n//           open={open}\n//           onClose={handleClose}\n//           aria-labelledby=\"responsive-dialog-title\"\n//         >\n//           <DialogTitle id=\"responsive-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\n//           <DialogContent>\n//             <DialogContentText>\n//               Let Google help apps determine location. This means sending anonymous location data to\n//               Google, even when no apps are running.\n//             </DialogContentText>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button autoFocus onClick={handleClose} color=\"primary\">\n//               Disagree\n//             </Button>\n//             <Button onClick={handleClose} color=\"primary\" autoFocus>\n//               Agree\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       </div>\n//     );\n//   }\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        color: 'black'\n    },\n    icon: {\n        color: \"#fff\"\n    },\n    appBar: {\n        backgroundColor: '#404040',\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        backgroundColor: '#404040',\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        backgroundColor: '#404040',\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        backgroundColor: '#404040',\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nexport default function SideBar(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const setCategory = (category) => {\n        props.changeCategoryEvent(category)\n    }\n\n    return (\n        <>\n            <div className={classes.root}>\n                <CssBaseline />\n                <AppBar\n                    position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: open,\n                    })}\n                >\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            className={clsx(classes.menuButton, {\n                                [classes.hide]: open,\n                            })}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" noWrap>\n                            News Aggregator\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    variant=\"permanent\"\n                    className={clsx(classes.drawer, {\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    })}\n                    classes={{\n                        paper: clsx({\n                            [classes.drawerOpen]: open,\n                            [classes.drawerClose]: !open,\n                        }),\n                    }}\n                >\n                    <div className={classes.toolbar}>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                        </IconButton>\n                    </div>\n                    {/* <Divider /> */}\n                    <List>\n                        <ListItem button key='Business' onClick={()=>setCategory('business')}>\n                            <ListItemIcon className={classes.icon} ><i className=\"fa fa-2x fa-briefcase\"></i></ListItemIcon>\n                            <ListItemText className={classes.icon} primary=\"Business\" />\n                        </ListItem>\n                        <ListItem button key='Sports' onClick={()=>setCategory('sports')}>\n                            <ListItemIcon className={classes.icon}><i className=\"fa fa-2x fa-futbol-o\"></i></ListItemIcon>\n                            <ListItemText className={classes.icon} primary=\"Sports\" />\n                        </ListItem>\n                        <ListItem button key='Technology' onClick={()=>setCategory('technology')}>\n                            <ListItemIcon className={classes.icon}><i className=\"fa fa-2x fa-laptop\"></i></ListItemIcon>\n                            <ListItemText className={classes.icon} primary=\"Technology\" />\n                        </ListItem>\n                        <ListItem button key='Science' onClick={()=>setCategory('science')}>\n                            <ListItemIcon className={classes.icon}><i className=\"fa fa-2x fa-flask\"></i></ListItemIcon>\n                            <ListItemText className={classes.icon} primary=\"Science\" />\n                        </ListItem>\n                        <ListItem button key='Entertainment' onClick={()=>setCategory('entertainment')}>\n                            <ListItemIcon className={classes.icon}><i className=\"fa fa-2x fa-film\" aria-hidden=\"true\"></i></ListItemIcon>\n                            <ListItemText className={classes.icon} primary=\"Entertainment\" />\n                        </ListItem>\n                        <ListItem button key='Health' onClick={()=>setCategory('health')}>\n                            <ListItemIcon className={classes.icon}><i className=\"fa fa-2x fa-medkit\"></i></ListItemIcon>\n                            <ListItemText className={classes.icon} primary=\"Health\" />\n                        </ListItem>\n                        {/* <ListItem button key='Politics'>\n                        <ListItemIcon className={classes.icon}><InboxIcon /></ListItemIcon>\n                        <ListItemText className={classes.icon} primary=\"Politics\" />\n                    </ListItem> */}\n                        {/* {['Business', 'Sports', 'Science', 'Technology', 'Politics'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon className={classes.icon}>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText className={classes.icon} primary={text} />\n                        </ListItem>\n                    ))} */}\n                    </List>\n                    {/* <Divider /> */}\n                </Drawer>\n                <main className={classes.content}>\n                    <div className={classes.toolbar} />\n                    <Typography paragraph>\n                    </Typography>\n                    <Typography paragraph></Typography>\n                </main>\n            </div>\n        </>\n    );\n}","import React from \"react\";\nimport Cards from \"../views/card\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"../views/view.css\";\nimport SideBar from \"../views/sideBar\";\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newsData: [],\n    };\n  }\n  componentDidMount() {\n    console.log(\"API URL:\", process.env.REACT_APP_API_URL);\n    let url = `${process.env.REACT_APP_API_URL}/api/v1/get/newsData`;\n    // let url = \"https://newsaggregator.canadaeast.cloudapp.azure.com:3001/api/v1/get/newsData?country=in&catagory=technology\";\n    fetch(url)\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          newsData: json.data,\n        });\n      });\n  }\n\n  changeCategory = (category) => {\n    const getNewsUrl = `${process.env.REACT_APP_API_URL}/api/v1/get/newsData?category=${category}`;\n    // let url = `https://newsaggregator.canadaeast.cloudapp.azure.com:3001/api/v1/get/newsData?country=in&catagory=${category}`;\n    fetch(getNewsUrl)\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.data && json.data.length > 0) {\n          const currentDate = new Date();\n          const publishedDate = new Date(json.data[0].publishedDate);\n          const diffDays = Math.floor(\n            (currentDate - publishedDate) / (1000 * 60 * 60 * 24)\n          );\n          if (diffDays > 1) {\n            this.addNewsData(category);\n            return;\n          } else {\n            this.setState({\n              newsData: json.data,\n            });\n          }\n        } else {\n          this.addNewsData(category);\n        }\n      });\n  };\n\n  addNewsData = (category) => {\n    const addNewsUrl = `${process.env.REACT_APP_API_URL}/api/v1/wrapper/newsApiCall`;\n    const body = { country: \"us\", category: category };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(body),\n    };\n\n    fetch(addNewsUrl, options)\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.data === []) {\n          throw Error(\"No data available\");\n        } else {\n          this.setState({\n            newsData: json.data,\n          });\n        }\n      });\n  };\n\n  removeDuplicates = (newsData) => {\n    const titles = [];\n    for (let data in newsData) {\n      if (!titles.includes(newsData[data].title)) {\n        titles.push(newsData[data].title);\n      } else {\n        delete newsData[data];\n      }\n    }\n  };\n\n  render() {\n    var { newsData } = this.state;\n    this.removeDuplicates(newsData);\n    return (\n      <>\n        <SideBar changeCategoryEvent={this.changeCategory.bind(this)} />\n        <Grid\n          justifyContent=\"center\"\n          direction=\"row\"\n          container\n          alignItems=\"center\"\n          className=\"Grid\"\n        >\n          {newsData.map((item, index) => (\n            <Cards\n              key={index}\n              image={item.imageUrl}\n              title={item.title}\n              content={item.content}\n              url={item.url}\n              publishedDate={new Date(item.publishedDate).toLocaleDateString(\n                \"en-US\",\n                {\n                  weekday: \"long\",\n                  year: \"numeric\",\n                  month: \"long\",\n                  day: \"numeric\",\n                }\n              )}\n              description={item.description}\n            />\n          ))}\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            href=\"/login\"\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './components/login';\nimport Dashboard from './components/dashboard';\nimport Registration from './components/registration';\n\nexport const Routes = () => {\n  return (\n    <div>\n      {/* <SideBar /> */}\n      <Switch>\n        <Route exact path=\"/Login\" component={Login} />\n        <Route exact path=\"/Dashboard\" component={Dashboard} />\n        <Route exact path=\"/\">\n          <Redirect to=\"/Dashboard\" />\n        </Route>\n        <Route exact path=\"/Registration\" component={Registration} />\n      </Switch>\n    </div>\n  );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { Routes } from \"./app.route\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n\n  <Router>\n    <Routes />\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}